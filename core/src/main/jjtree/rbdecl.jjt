options { 
	IGNORE_CASE = true; 
	STATIC = false; 
	NODE_EXTENDS="RbdeclNode";
	MULTI = true;
} 

PARSER_BEGIN(RbdeclParser)

package de.lichtflut.rb.core.rbdecl;

public class RbdeclParser {
	
}

PARSER_END(RbdeclParser)

SKIP: { "\r" | "\n" | "\t" | " " }

SKIP : {
  	"#" : IN_COMMENT
}

<IN_COMMENT> SKIP : {
    "\n": DEFAULT 
} 

<IN_COMMENT> SKIP : {
    <  ~[] > 
} 

TOKEN: { 
	<TYPE_BOOLEAN : "Boolean">
  | <TYPE_INTEGER : "Integer">
  | <TYPE_DECIMAL : "Decimal">
  | <TYPE_STRING : "String">
  | <TYPE_DATE : "Date">
  | <TYPE_TIME : "Time">
  | <TYPE_TIMESTAMP : "Timestamp">
  | <TYPE_RESOURCE : "Resource">
  | <URI: (<ALPHA_CHAR>)+ "://" <HOSTNAME> (<PATH>)? (<QUERY>)? ("#"(<ALPHANUM_CHAR>)*)?>
  | <NUMBER:   (<FLOAT> | <INTEGER>)>
  | <LITERAL : ( (<ALPHANUM_CHAR> | "_" ))+>
  | <EQUALS: "=">
  | <ASSIGN: ":=">
  | <SEMI_COLON: ";">
  | <COMMA: ",">
  | <COLON: ":">
  | <NOT_EQUALS: "!=">
  | <DBL_QUOT: "\"">
  | <QUESTION_MARK: "?" >
  | <#PATH: ( ("/" | "-" | "_" | "#" | <ALPHANUM_CHAR> )+ )>
  | <#HOSTNAME: ((<ALPHANUM_CHAR>)+ ".")+ (<ALPHA_CHAR>)+>
  | <#QUERY: ("?" (<ALPHANUM_CHAR> | "&" | "=")* )>
  | <#FLOAT:  (<NUM_CHAR>)+"."(<NUM_CHAR>)+>
  | <#INTEGER:  (<NUM_CHAR>)+>
  | <#NUM_CHAR:   ["0"-"9"] >
  | <#ALPHANUM_CHAR: (<ALPHA_CHAR> | <NUM_CHAR>)>
  | <#ALPHA_CHAR:					
      [
       "\u0041"-"\u005a",   // unicode letters
       "\u0061"-"\u007a",
       "\u00c0"-"\u00d6",
       "\u00d8"-"\u00f6",
       "\u00f8"-"\u00ff",
       "\u0100"-"\u1fff",
       "_"
      ]
  >
}

void Identifier() #Identifier : 
{ Token t; }
{
	t = <LITERAL> { jjtThis.name = t.image; } 
}

